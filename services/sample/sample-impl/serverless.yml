service: sample-data

plugins:
  # - serverless-plugin-monorepo
  # - serverless-auto-swagger
  - serverless-esbuild
  - serverless-iam-roles-per-function
  # - serverless-stage-manager
  - serverless-cloudside-plugin
  - serverless-offline # should be last of 'offline' plugins.
  - serverless-prune-plugin
  
package:
  individually: true

params:
  default:
    production: false
    env: test
    region: eu-north-1

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage,'dev'}
  memorySize: 256
  timeout: 6
  # environment:
  region: ${opt:region, env:AWS_REGION}
    
  httpApi:
    # https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html
    payload: '1.0'

custom:
  esbuild:
    packager: yarn
    minify: false
    # plugins: esbuild-plugins.js
    bundle: true
    sourcemap: true

  prune:
    automatic: true
    number: 5

functions:
  getDataItem:
    handler: src/index.getDataItemHandler
    description: Gets data item
    environment: 
      ITEMS_TABLE: !Ref ItemsTable
    iamRoleStatementsInherit: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
        Resource: !GetAtt ItemsTable.Arn
    events:
      - httpApi:
          method: GET
          path: /items/{id}

resources:
  Resources:
      ItemsTable: 
        Type: AWS::DynamoDB::Table
        Properties: 
          AttributeDefinitions: 
            - 
              AttributeName: "pk"
              AttributeType: "S"
            - 
              AttributeName: "sk"
              AttributeType: "S"
          KeySchema: 
            - 
              AttributeName: "pk"
              KeyType: "HASH"
            - 
              AttributeName: "sk"
              KeyType: "RANGE"
          TableName: !Sub "${AWS::StackName}-items"
          BillingMode: PAY_PER_REQUEST
  